# -*- coding: utf-8 -*-
"""SB2527 Percolation 1-D Run, Plot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gWJTrrxDtilE_bCl8I8vM9D2Aglfr7ZI
"""

# plot
fig, axes = plt.subplots(nrows=len(chain_ps_arrays), ncols=4, squeeze=True, figsize=(8.0, 4.5))

for ps_index, ps in enumerate(chain_ps_arrays):
    for l_index, l in enumerate(chain_ls):
        my_stats = chain_stats[ps_index][l_index]

        line, = axes[ps_index, 0].plot(ps, my_stats['spanning_cluster'], rasterized=True, label=r'{}'.format(l))

        axes[ps_index, 0].fill_between(ps, my_stats['spanning_cluster_ci'].T[1], my_stats['spanning_cluster_ci'].T[0],
            facecolor=line.get_color(), alpha=0.5, rasterized=True)

        line, = axes[ps_index, 1].plot(ps, my_stats['max_cluster_size'], rasterized=True, label=r'L={}'.format(l))

        axes[ps_index, 1].fill_between(ps, my_stats['max_cluster_size_ci'].T[1],
            my_stats['max_cluster_size_ci'].T[0], facecolor=line.get_color(), alpha=0.5, rasterized=True)

        axes[ps_index, 2].plot(ps, my_stats['moments'][2], rasterized=True, label=r'L={}'.format(l))

        axes[ps_index, 2].fill_between(ps, my_stats['moments_ci'][2].T[1], my_stats['moments_ci'][2].T[0],
            facecolor=line.get_color(), alpha=0.5, rasterized=True)

        axes[ps_index, 3].semilogy(ps, my_stats['moments'][2], rasterized=True)

        axes[ps_index, 3].fill_between(ps, np.where(my_stats['moments_ci'][2].T[1] > 0.0,
                my_stats['moments_ci'][2].T[1],
                0.01),
            np.where(my_stats['moments_ci'][2].T[0] > 0.0, my_stats['moments_ci'][2].T[0],
                0.01), facecolor=line.get_color(), alpha=0.5, rasterized=True)

    axes[ps_index, 0].set_ylim(ymax=1.0)
    axes[ps_index, 1].set_ylim(ymax=1.0)
    axes[ps_index, 2].set_ylim(ymin=0.0)
    axes[ps_index, 3].set_ylim(ymin=0.5)

    for ax in axes[ps_index, :]:
        ax.set_xlim(xmin=ps.min(), xmax=ps.max() + (ps.max() - ps.min()) * 0.05)
        ax.set_xticks(np.linspace(ps.min(), ps.max(), num=3))

    for ax in axes[ps_index, :-1]:
        ax.set_yticks(np.linspace(0, ax.get_ylim()[1], num=3))


axes[0, 0].set_title(r'Perc. Probability')
axes[0, 1].set_title(r'Size of Max. Cluster')
axes[0, 2].set_title(r'Mean Cluster Size')
axes[0, 3].set_title(r'Mean Cluster Size')

for ax in axes[-1, :]:
    ax.set_xlabel(r'$p$')

axes[0, 2].legend(frameon=False, loc='best')


plt.tight_layout()
plt.savefig('Percolation Fig 4.2.jpg', dpi = 600, format = 'jpg')
plt.show()